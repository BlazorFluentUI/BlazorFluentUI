@page "/textFieldPage"

<h1>Basic TextField</h1>
<div class="textFieldDiv">
    <BFUTextField Label="TextField" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="TextField with PostalCode autocomplete" AutoComplete="AutoComplete.PostalCode" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="TextField Password" InputType="InputType.Password" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="TextField Disabled" Disabled="true" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="TextField Readonly" ReadOnly="true" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="TextField Required" Required="true" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="TextField w/ Icon" IconName="Home" />
</div>
<div class="textFieldDiv">
    <BFUTextField Required="true" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="With Error" ErrorMessage="there is an error" />
</div>
@*<div class="textFieldDiv">
        <BFUTextField Label="With Input Mask" MaskChar="+" />
    </div>*@
<div class="textFieldDiv">
    <BFUTextField Label="With Placeholder" Placeholder="placeholder text" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="Disabled Placeholder" Placeholder="placeholder text" Disabled="true" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="Disabled Placeholder" Placeholder="placeholder text" Disabled="true" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="With Prefix (text only)" Prefix="https://" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="With PrefixContent (custom content)">
        <PrefixContent>
            <BFUIcon IconName="Add" />
        </PrefixContent>
    </BFUTextField>
</div>
<div class="textFieldDiv">
    <BFUTextField Label="With Suffix (text only)" Suffix="bananas" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="With SuffixContent (custom content)">
        <SuffixContent>
            <BFUIcon IconName="Home" />
        </SuffixContent>
    </BFUTextField>
</div>
<div class="textFieldDiv">
    <BFUTextField Label="With Prefix & Suffix" Prefix="Dr." Suffix="Esquire" />
</div>

<h2>No Labels</h2>
<div class="textFieldDiv">
    <BFUTextField Required="true" />
</div>
<div class="textFieldDiv">
    <BFUTextField Underlined="true" />
</div>
<div class="textFieldDiv">
    <BFUTextField Disabled="true" />
</div>


<h2>Multiline</h2>
<div class="textFieldDiv">
    <BFUTextField Label="TextField Multiline" Multiline="true" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="TextField Multiline Required" Multiline="true" Required="true" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="TextField Multiline Disabled" Multiline="true" Disabled="true" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="Not resizable" Multiline="true" Resizable="false" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="Auto-adjusting height" Multiline="true" AutoAdjustHeight="true" />
</div>


<h2>Underline &amp; Borderless</h2>
<div class="textFieldDiv">
    <BFUTextField Label="TextField Underlined" Underlined="true" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="TextField Underlined Disabled" Underlined="true" Disabled="true" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="TextField Underlined Required" Underlined="true" Required="true" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="TextField Borderless" Borderless="true" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="TextField Multiline Borderless" Multiline="true" Borderless="true" />
</div>

<h2>Binding Mode</h2>

<div class="textFieldDiv" style="display:flex; flex-direction: row">
    <BFUTextField Label="TextField OnInput 1" @bind-Value=@onInputContent @oninput="UpdateOnInputContent"/>
    <BFUTextField Label="TextField OnInput 2" @bind-Value=@onInputContent @oninput="UpdateOnInputContent" />
</div>
<div class="textFieldDiv" style="display:flex; flex-direction: row">
    <BFUTextField Label="TextField OnChange 1" @bind-Value=@onChangeContent @onchange="UpdateOnChangeContent" />
    <BFUTextField Label="TextField OnChange 2" @bind-Value=@onChangeContent @onchange="UpdateOnChangeContent" />
</div>

<h2>TextField error message variations</h2>

<h4>Hint: the input length must be less than 3.</h4>

<div class="textFieldDiv">
    <BFUTextField Label="String-based validation" OnGetErrorMessage="GetErrorMessage" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="String-based validation on render" DefaultValue="Shows an error message on render" OnGetErrorMessage="GetErrorMessage" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="String-based validation only on change" DefaultValue="Validates only on input change, not on render" OnGetErrorMessage="GetErrorMessage" ValidateOnLoad="false" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="Both description and error message" DefaultValue="Shows description and error message on render" Description="Field description" OnGetErrorMessage="GetErrorMessage" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="Deferred string-based validation" Placeholder="Validates after user stops typing for 2 seconds" DeferredValidationTime="2000" OnGetErrorMessage="GetErrorMessage" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="Validates only on focus and blur" Placeholder="Validates only on input focus and blur" ValidateOnFocusIn="true" ValidateOnFocusOut="true" OnGetErrorMessage="GetErrorMessage" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="Validates only on blur" Placeholder="Validates only on blur" ValidateOnFocusOut="true" OnGetErrorMessage="GetErrorMessage" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="Underlined field " DefaultValue="This value is too long" Underlined="true" OnGetErrorMessage="GetErrorMessage" />
</div>
<div class="textFieldDiv">
    <BFUTextField Label="Uses the errorMessage property to set an error state" Placeholder="This field always has an error" ErrorMessage="This is a statically set error message" />
</div>

@code {
    string onInputContent = "";
    string onChangeContent = "";

    public string GetErrorMessage(string value)
    {
        return value.Length < 3 ? "" : $"Input value length must be less than 3. Actual length is {value.Length}.";
    }

    private void UpdateOnInputContent(ChangeEventArgs e)
    {
        onInputContent = e.Value.ToString();
    }

    private void UpdateOnChangeContent(ChangeEventArgs e)
    {
        onChangeContent = e.Value.ToString();
    }
}