@namespace BlazorFluentUI
@inherits BFUComponentBase
@typeparam TItem

<div class=@($"ms-DetailsList {ClassName}")
     style=@($"{Style}")
     aria-label=@AriaLabel
     @ref=@RootElementReference
     >
    <div role="grid"
         aria-label=@AriaLabel
         aria-readonly=true
         style="display:flex;flex-direction:column;">
        <div 
             role="presentation"
             class="ms-DetailsList-headerWrapper">
            @if (IsHeaderVisible)
            {
                @if (HeaderTemplate != null)
                {
                    @HeaderTemplate
                }
                else
                {
                    <BFUDetailsHeader Columns=@_adjustedColumns
                                      TItem="TItem"
                                      Selection=@Selection
                                      LayoutMode=@LayoutMode

                                      AriaLabel="ariaLabelForListHeader"
                                      AriaLabelForSelectAllCheckbox="ariaLabelForSelectAllCheckbox"
                                      AriaLabelForToggleAllGroup="ariaLabelForSelectionColumn"

                                      OnColumnAutoResized=@OnColumnAutoResized
                                      OnColumnResized=@OnColumnResizedInternal
                                      CheckboxVisibility=@CheckboxVisibility
                                      SelectAllVisibility=@selectAllVisibility
                                      
                                      />
                }
            }
        </div>
        <div 
             role="presentation"
             class="ms-DetailsList-contentWrapper"
             style="overflow-y:hidden;height:100%;">
            <BFUFocusZone ClassName="ms-DetailsList-focusZone"
                       Direction="FocusZoneDirection.Vertical"
                       InnerZoneKeystrokeTriggers="new System.Collections.Generic.List<ConsoleKey> { ConsoleKey.RightArrow }"
                       >
                @if (!DisableSelectionZone)
                {
                    <BFUSelectionZone Selection=@Selection
                                   @ref="selectionZone"
                                   DisableRenderOnSelectionChanged="true"
                                   SelectionPreservedOnEmptyClick=@SelectionPreservedOnEmptyClick
                                   SelectionMode=@SelectionMode
                                   EnterModalOnTouch=@EnterModalSelectionOnTouch
                                   OnItemInvoked=@((item,index) => this.OnItemInvoked.InvokeAsync(item))
                                   >
                        @if (SubGroupSelector == null)
                        {
                            <BFUList ItemsSource=@ItemsSource
                                     IsVirtualizing=@IsVirtualizing
                                     >
                                <ItemTemplate>
                                    @if (RowTemplate != null)
                                    {
                                        RowTemplate(context);
                                    }
                                    else
                                    {
                                        <BFUDetailsRow Item=@context.Item
                                                       ItemIndex=@context.Index
                                                    Columns=@_adjustedColumns
                                                    SelectionMode=@SelectionMode
                                                       Selection=@Selection
                                                    Compact=@Compact
                                                    CheckboxVisibility=@CheckboxVisibility />
                                    }
                                </ItemTemplate>
                            </BFUList>
                        }
                        else
                        {
                            <BFUGroupedList ItemsSource=@ItemsSource
                                            TItem="TItem"
                                            TKey="object"
                                         @ref=@groupedList
                                            GetKey=@GetKey
                                            Selection=@Selection
                                         SubGroupSelector=@SubGroupSelector
                                         GroupTitleSelector=@GroupTitleSelector
                                         IsVirtualizing=@IsVirtualizing
                                         SelectionMode=@(CheckboxVisibility != CheckboxVisibility.Hidden ? SelectionMode : SelectionMode.None)>
                                <ItemTemplate>
                                    <BFUDetailsRow Item=@context.Item.Item
                                                   TItem="TItem"
                                                   ItemIndex=@context.Index
                                                    Selection=@Selection
                                                   Columns=@_adjustedColumns
                                                   SelectionMode=@(CheckboxVisibility != CheckboxVisibility.Hidden ? SelectionMode : SelectionMode.None)
                                                
                                                   CheckboxVisibility=@CheckboxVisibility
                                                   Compact=@Compact />
                                </ItemTemplate>
                            </BFUGroupedList>
                        }
                    </BFUSelectionZone>

                }
                else
                {
                    @if (SubGroupSelector == null)
                    {
                        <BFUList ItemsSource=@ItemsSource
                              >
                            <ItemTemplate>
                                @if (RowTemplate != null)
                                {
                                    RowTemplate(context);
                                }
                                else
                                {
                                    <BFUDetailsRow Item=@context.Item
                                                   TItem="TItem"
                                                Columns=@_adjustedColumns
                                                SelectionMode=@SelectionMode
                                                Selection=@Selection
                                                Compact=@Compact
                                                CheckboxVisibility=@CheckboxVisibility />
                                }
                            </ItemTemplate>
                        </BFUList>
                    }
                    else
                    {
                        <BFUGroupedList ItemsSource=@ItemsSource
                                        TItem="TItem"
                                        TKey="object"
                                        GetKey=@GetKey
                                        @ref=@groupedList
                                        Selection=@Selection
                                        SubGroupSelector=@SubGroupSelector
                                        GroupTitleSelector=@GroupTitleSelector
                                        SelectionMode=@(CheckboxVisibility != CheckboxVisibility.Hidden ? SelectionMode : SelectionMode.None)>
                            <ItemTemplate>
                                <BFUDetailsRow Item=@context.Item.Item
                                            ItemIndex=@context.Index
                                               TItem="TItem"
                                            Columns=@_adjustedColumns
                                            SelectionMode=@(CheckboxVisibility != CheckboxVisibility.Hidden ? SelectionMode : SelectionMode.None)
                                               Selection=@Selection
                                            CheckboxVisibility=@CheckboxVisibility
                                            Compact=@Compact />
                            </ItemTemplate>
                        </BFUGroupedList>
                    }
                }
            </BFUFocusZone>
        </div>
        @if (FooterTemplate != null)
        {
            @FooterTemplate
        }
    </div>
</div>
