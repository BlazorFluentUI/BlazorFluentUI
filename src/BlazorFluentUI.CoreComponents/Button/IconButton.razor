@inherits ButtonParameters
@namespace BlazorFluentUI

@if (MenuItemTemplate != null)
{
    <ButtonBase Href=@Href
                ClassName=@(ClassName + " ms-Button--icon")
                Style=@Style
                Primary=@Primary
                Disabled=@Disabled
                AllowDisabledFocus=@AllowDisabledFocus
                PrimaryDisabled=@PrimaryDisabled
                Checked=@Checked
                AriaDescripton=@AriaDescripton
                AriaLabel=@AriaLabel
                AriaRoleDescription=@AriaRoleDescription
                SplitButtonAriaLabel=@SplitButtonAriaLabel
                Text=@null
                SecondaryText=@SecondaryText
                Toggle=@Toggle
                Split=@Split
                IconName=@IconName
                IconSrc=@IconSrc
                HideChevron=@HideChevron
                MenuItems=@MenuItems
                MenuItemTemplate=@MenuItemTemplate
                SubordinateItemTemplate=@SubordinateItemTemplate
                CheckedChanged=@CheckedChanged
                OnClick=@OnClick
                OnKeyDown=@OnKeyDown
                Command=@Command
                CommandParameter=@CommandParameter
                UnknownProperties=@UnknownProperties
                @ref="baseReference" />
}
else
{
    <ButtonBase Href=@Href
                ClassName=@(ClassName + " ms-Button--icon")
                Style=@Style
                Primary=@Primary
                Disabled=@Disabled
                AllowDisabledFocus=@AllowDisabledFocus
                PrimaryDisabled=@PrimaryDisabled
                Checked=@Checked
                AriaDescripton=@AriaDescripton
                AriaLabel=@AriaLabel
                AriaRoleDescription=@AriaRoleDescription
                SplitButtonAriaLabel=@SplitButtonAriaLabel
                Text=@null
                SecondaryText=@SecondaryText
                Toggle=@Toggle
                Split=@Split
                IconName=@IconName
                IconSrc=@IconSrc
                HideChevron=@HideChevron
                MenuItems=@MenuItems
                SubordinateItemTemplate=@SubordinateItemTemplate
                CheckedChanged=@CheckedChanged
                OnClick=@OnClick
                OnKeyDown=@OnKeyDown
                Command=@Command
                CommandParameter=@CommandParameter
                UnknownProperties=@UnknownProperties
                @ref="baseReference" />
}

@code{
    private ButtonBase baseReference = new ButtonBase();
    protected override void OnAfterRender(bool firstRender)
    {
        RootElementReference = baseReference.RootElementReference;
        base.OnAfterRender(firstRender);
    }
}